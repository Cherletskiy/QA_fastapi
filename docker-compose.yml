#services:
#  db:
#    image: postgres:latest
#    container_name: my_postgres_db
#    restart: always
#    environment:
#      POSTGRES_PASSWORD: ${DB_PWD}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_DB: ${DB_NAME}
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#    ports:
#      - 5431:5432
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin_container
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#    ports:
#      - 8080:80
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#
##  app:
##    build:
##      context: .
##      dockerfile: Dockerfile
##    container_name: fastapi_app
##    restart: always
##    environment:
##      - DB_HOST=db
##      - DB_PORT=5432
##      - DB_NAME=${DB_NAME}
##      - DB_USER=${DB_USER}
##      - DB_PWD=${DB_PWD}
##    ports:
##      - 8000:8000
##    depends_on:
##      db:
##        condition: service_healthy
#
#
#volumes:
#  pg_data:
#  pgadmin_data:

services:
  db:
    image: postgres:15
    container_name: qa_postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PWD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: qa_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8080:80
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qa_fastapi_app
    restart: always
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
      - PYTHONPATH=/app
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy

volumes:
  pg_data:
  pgadmin_data: